package me.mehboss.recipe;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryType;
import org.bukkit.event.inventory.PrepareItemCraftEvent;
import org.bukkit.inventory.CraftingInventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.ShapedRecipe;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener {

	ItemStack i = null;
	ShapedRecipe R = null;

	public HashMap<String, String> matches = new HashMap<String, String>();
	public ArrayList<ShapedRecipe> recipe = new ArrayList<ShapedRecipe>();

	public void onEnable() {
		Plugin config = Bukkit.getPluginManager().getPlugin("CustomRecipes");

		config.saveDefaultConfig();

		Bukkit.getPluginManager().registerEvents(this, this);
		Bukkit.getServer().clearRecipes();
		Bukkit.resetRecipes();

		addItems();
	}

	@SuppressWarnings("deprecation")
	public void addItems() {

		Plugin config = Bukkit.getPluginManager().getPlugin("CustomRecipes");

		for (String item : config.getConfig().getConfigurationSection("Items").getKeys(false)) {
			int type = config.getConfig().getInt("Items." + item + ".Item");
			int amount = config.getConfig().getInt("Items." + item + ".Amount");

			String damage = config.getConfig().getString("Items." + item + ".Item-Damage");

			if (damage.equalsIgnoreCase("none")) {
				i = new ItemStack(Material.getMaterial(type), amount);
				
			} else {
				i = new ItemStack(Material.getMaterial(type), amount, Short.valueOf(damage));
			}

			ItemMeta m = i.getItemMeta();

			m.setDisplayName(ChatColor.translateAlternateColorCodes('&',
					config.getConfig().getString("Items." + item + ".Name")));

			List<String> loreList = new ArrayList<String>();

			if (config.getConfig().getStringList("Items." + item + ".Lore") != null) {

				for (String Item1Lore : config.getConfig().getStringList("Items." + item + ".Lore")) {

					String crateLore = (Item1Lore.replaceAll("(&([a-fk-o0-9]))", "\u00A7$2"));

					loreList.add(crateLore);
				}
				m.setLore(loreList);
			}

			i.setItemMeta(m);

			if (config.getConfig().getStringList("Items." + item + ".Enchantments") != null) {

				for (String e : config.getConfig().getStringList("Items." + item + ".Enchantments")) {
					String[] breakdown = e.split(":");

					String enchantment = breakdown[0];

					int lvl = Integer.parseInt(breakdown[1]);

					i.addUnsafeEnchantment(Enchantment.getByName(enchantment), lvl);
				}
			}

			i.setItemMeta(m);

			List<String> r = config.getConfig().getStringList("Items." + item + ".ItemCrafting");

			String line1 = r.get(0);
			String line2 = r.get(1);
			String line3 = r.get(2);

			R = new ShapedRecipe(i);

			R.shape(line1, line2, line3);

			for (String I : config.getConfig().getStringList("Items." + item + ".Ingredients")) {
				String[] b = I.split(":");

				char lin1 = b[0].charAt(0);

				String lin2 = b[1];

				Material mi = Material.matchMaterial(lin2);

				R.setIngredient(lin1, mi);
			}
			Bukkit.getServer().addRecipe(R);
			recipe.add(R);
		}
	}

	ShapedRecipe ItemRecipe = null;
	ItemStack Item = null;

	@EventHandler
	public void check(PrepareItemCraftEvent e) {

		String letterSlot1 = "";
		String letterSlot2 = "";
		String letterSlot3 = "";
		String letterSlot4 = "";
		String letterSlot5 = "";
		String letterSlot6 = "";
		String letterSlot7 = "";
		String letterSlot8 = "";
		String letterSlot9 = "";

		CraftingInventory inv = e.getInventory();
		Boolean recipematches = false;
		Boolean recipeMatches = false;

		Plugin config = Bukkit.getPluginManager().getPlugin("CustomRecipes");

		if (inv.getType() == InventoryType.WORKBENCH) {

			for (ShapedRecipe newrecipe : recipe) {
				if (inv.getResult().equals(newrecipe.getResult())) {

					ItemRecipe = newrecipe;
					Item = newrecipe.getResult();

					recipematches = true;

					inv.setResult(new ItemStack(Material.AIR));
					break;
				}
			}
			if (recipematches == true) {

				matches.put("X", "false");

				for (String name : config.getConfig().getConfigurationSection("Items").getKeys(false)) {

					String I = config.getConfig().getString("Items." + name + ".Name");

					if (ChatColor.translateAlternateColorCodes('&', I).equals(Item.getItemMeta().getDisplayName())) {

						for (String In : config.getConfig().getStringList("Items." + name + ".Ingredients")) {

							String[] newsplit = In.split(":");

							if (newsplit.length == 2) {
								matches.put(newsplit[0], "false");

							} else if (newsplit.length == 3) {
								matches.put(newsplit[0], newsplit[2]);
							}
						}

						List<String> r = config.getConfig().getStringList("Items." + name + ".ItemCrafting");

						String row1 = r.get(0);
						String row2 = r.get(1);
						String row3 = r.get(2);

						// loops 3 times for all crafting rows

						for (int j = 1; j < 10; j++) {
							String[] newsplit1 = row1.split("");
							String[] newsplit2 = row2.split("");
							String[] newsplit3 = row3.split("");

							if (j == 1) {
								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot1 = "false";

								} else {
									String slot1 = newsplit1[0];
									letterSlot1 = matches.get(slot1); // slot 1

								}
							}
							if (j == 2) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot2 = "false";
								} else {

									String slot2 = newsplit1[1];
									letterSlot2 = matches.get(slot2); // slot 2
								}
							}
							if (j == 3) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot3 = "false";
								} else {

									String slot3 = newsplit1[2];
									letterSlot3 = matches.get(slot3); // slot 3
								}
							}
							if (j == 4) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot4 = "false";
								} else {

									String slot4 = newsplit2[0];
									letterSlot4 = matches.get(slot4);
								}
							}
							if (j == 5) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot5 = "false";
								} else {

									String slot5 = newsplit2[1];
									letterSlot5 = matches.get(slot5);
								}
							}
							if (j == 6) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot6 = "false";
								} else {

									String slot6 = newsplit2[2];
									letterSlot6 = matches.get(slot6); // slot 6
								}
							}
							if (j == 7) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot7 = "false";
								} else {

									String slot7 = newsplit3[0];
									letterSlot7 = matches.get(slot7); // slot 7

								}
							}
							if (j == 8) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot8 = "false";
								} else {

									String slot8 = newsplit3[1];
									letterSlot8 = matches.get(slot8); // slot 8
								}
							}
							if (j == 9) {

								if (inv.getItem(j) == null || inv.getItem(j).getType() == null) {
									letterSlot9 = "false";
								} else {

									String slot9 = newsplit3[2];
									letterSlot9 = matches.get(slot9); // slot 9
								}
							}
						}
					}
				}

				String invSlot1 = "";
				String invSlot2 = "";
				String invSlot3 = "";
				String invSlot4 = "";
				String invSlot5 = "";
				String invSlot6 = "";
				String invSlot7 = "";
				String invSlot8 = "";
				String invSlot9 = "";

				for (int j = 1; j < 10; j++) {

					if (j == 1) {

						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot1 = "false";
						} else {
							invSlot1 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 2) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot2 = "false";
						} else {
							invSlot2 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 3) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot3 = "false";
						} else {
							invSlot3 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 4) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot4 = "false";
						} else {
							invSlot4 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 5) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot5 = "false";
						} else {
							invSlot5 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 6) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot6 = "false";
						} else {
							invSlot6 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 7) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot7 = "false";
						} else {
							invSlot7 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 8) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot8 = "false";
						} else {
							invSlot8 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}

					if (j == 9) {
						if (inv.getItem(j) == null || inv.getItem(j).getType() == null
								|| !inv.getItem(j).getItemMeta().hasDisplayName()) {
							invSlot9 = "false";
						} else {
							invSlot9 = inv.getItem(j).getItemMeta().getDisplayName();
						}
					}
				}

				if (invSlot1.equals(letterSlot1) && invSlot2.equals(letterSlot2) && invSlot3.equals(letterSlot3)
						&& invSlot4.equals(letterSlot4) && invSlot5.equals(letterSlot5) && invSlot6.equals(letterSlot6)
						&& invSlot7.equals(letterSlot7) && invSlot8.equals(letterSlot8)
						&& invSlot9.equals(letterSlot9)) {
					recipeMatches = true;
				}

				matches.clear();

				if (recipeMatches == true) {
					inv.setResult(new ItemStack(Item));

				} else {
					inv.setResult(new ItemStack(Material.AIR));
				}

				Item = null;
			}
		}
	}
}
